1、宿主机器创建文件夹持久化mysql data 以及 mysql.cnf
	mkdir /usr/local/mysqlData/master/cnf
	mkdir /usr/local/mysqlData/master/data
	vi /usr/loal/mysqlData/master/cnf/mysql.cnf

2、主库mysql-master mysql.cnf配置

	[mysqld]
	pid-file    = /var/run/mysqld/mysqld.pid
	socket    = /var/run/mysqld/mysqld.sock
	datadir    = /var/lib/mysql

	symbolic-links=0

	character-set-server = utf8   
	#skip-networking  
	innodb_print_all_deadlocks = 1
	max_connections = 2000  
	max_connect_errors = 6000  
	open_files_limit = 65535  
	table_open_cache = 128   
	max_allowed_packet = 4M  
	binlog_cache_size = 1M  
	max_heap_table_size = 8M  
	tmp_table_size = 16M  
	  
	read_buffer_size = 2M  
	read_rnd_buffer_size = 8M  
	sort_buffer_size = 8M  
	join_buffer_size = 28M  
	key_buffer_size = 4M  
	  
	thread_cache_size = 8  
	  
	query_cache_type = 1  
	query_cache_size = 8M  
	query_cache_limit = 2M  
	  
	ft_min_word_len = 4  
	  
	log-bin = mysql-bin
	server-id = 1
	binlog_format = mixed  
	 
	performance_schema = 0  
	explicit_defaults_for_timestamp  
	  
	#lower_case_table_names = 1  
	  
	interactive_timeout = 28800  
	wait_timeout = 28800  

	# Recommended in standard MySQL setup  
	  
	sql_mode=NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER,STRICT_TRANS_TABLES   
	  
	[mysqldump]  
	quick  
	max_allowed_packet = 16M  
	  
	[myisamchk]
	key_buffer_size = 8M
	sort_buffer_size = 8M
	read_buffer = 4M
	write_buffer = 4M

3、创建启动主库mysql-master 容器
	docker run -itd -p 3306:3306 --name mysql-master -v /usr/local/mysqlData/master/cnf:/etc/mysql/conf.d -v /usr/local/mysqlData/master/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=master  mysql:latest

4、，并添加复制master数据的用户，等下会用上

	[root@192 ~]# docker exec -it mysql-master /bin/bash
	
	root@942c2253509c:/# mysql -uroot -pmaster

	mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'master' WITH GRANT OPTION;
	
	Query OK, 0 rows affected, 1 warning (0.00 sec)
	
	mysql> GRANT REPLICATION SLAVE ON *.* to 'reader'@'%' identified by 'reader';

	Query OK, 0 rows affected, 1 warning (0.00 sec)

	mysql> FLUSH PRIVILEGES;
	
	Query OK, 0 rows affected (0.00 sec)

5、从库配置
	mkdir /usr/local/mysqlData/slave/cnf
	mkdir /usr/local/mysqlData/slave/data
	vi /usr/loal/mysqlData/slave/cnf/mysql.cnf


6、从库mysql-slave mysql.cnf配置
	[mysqld]
	pid-file    = /var/run/mysqld/mysqld.pid
	socket    = /var/run/mysqld/mysqld.sock
	datadir    = /var/lib/mysql

	symbolic-links=0

	character-set-server = utf8   
	#skip-networking  
	innodb_print_all_deadlocks = 1
	max_connections = 2000  
	max_connect_errors = 6000  
	open_files_limit = 65535  
	table_open_cache = 128   
	max_allowed_packet = 4M  
	binlog_cache_size = 1M  
	max_heap_table_size = 8M  
	tmp_table_size = 16M  
	  
	read_buffer_size = 2M  
	read_rnd_buffer_size = 8M  
	sort_buffer_size = 8M  
	join_buffer_size = 28M  
	key_buffer_size = 4M  
	  
	thread_cache_size = 8  
	  
	query_cache_type = 1  
	query_cache_size = 8M  
	query_cache_limit = 2M  
	  
	ft_min_word_len = 4  
	  
	log-bin = mysql-bin
	server-id = 2
	binlog_format = mixed  
	 
	performance_schema = 0  
	explicit_defaults_for_timestamp  
	  
	#lower_case_table_names = 1  
	  
	interactive_timeout = 28800  
	wait_timeout = 28800  

	# Recommended in standard MySQL setup  
	  
	sql_mode=NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER,STRICT_TRANS_TABLES   
	  
	[mysqldump]  
	quick  
	max_allowed_packet = 16M  
	  
	[myisamchk]
	key_buffer_size = 8M
	sort_buffer_size = 8M
	read_buffer = 4M
	write_buffer = 4M

6、创建启动从库mysql-slave 容器
	docker run -itd -p 3307:3306 --name mysql-slave -v /usr/local/mysqlData/slave/cnf:/etc/mysql/conf.d -v /usr/local/mysqlData/slave/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=slave mysql:latest

	#进入容器开启root 远程访问
	[root@192 ~]# docker exec -it mysql-slave /bin/bash
	
	root@942c2253509c:/# mysql -uroot -pslave
	
	mysql> GRANT SHOW DATABASES,SELECT ON *.* TO 'slave'@'%' IDENTIFIED BY 'slave';
	
	mysql> FLUSH PRIVILEGES;
	
	Query OK, 0 rows affected (0.00 sec)


7、进入 mysql-master

	mysql> show master status;
	+------------------+----------+--------------+------------------+-------------------+
	| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
	+------------------+----------+--------------+------------------+-------------------+
	| mysql-bin.000007 |      675 |              |                  |                   |
	+------------------+----------+--------------+------------------+-------------------+

8、进入mysql-slave

	mysql> change master to master_host='192.168.0.147',master_user='reader',master_password='reader',master_log_file='mysql-bin.000007',master_log_pos=675;
	Query OK, 0 rows affected, 2 warnings (0.03 sec)

	##启动从库同步
	mysql> start slave;
	Query OK, 0 rows affected (0.03 sec)


	##查看从库同步状态
	mysql> show slave status\G
	*************************** 1. row ***************************
		       Slave_IO_State: 
		          Master_Host: 192.168.0.147
		          Master_User: reader
		          Master_Port: 3306
		        Connect_Retry: 60
		      Master_Log_File: mysql-bin.000007
		  Read_Master_Log_Pos: 1757
		       Relay_Log_File: fd15716e10fa-relay-bin.000001
		        Relay_Log_Pos: 4
		Relay_Master_Log_File: mysql-bin.000007
		     Slave_IO_Running: Yes
		    Slave_SQL_Running: Yes
		      Replicate_Do_DB: 
		  Replicate_Ignore_DB: 
		   Replicate_Do_Table: 
	       Replicate_Ignore_Table: 
	      Replicate_Wild_Do_Table: 
	  Replicate_Wild_Ignore_Table: 
		           Last_Errno: 0
		           Last_Error: 
		         Skip_Counter: 0
		  Exec_Master_Log_Pos: 1757
		      Relay_Log_Space: 154
		      Until_Condition: None
		       Until_Log_File: 
		        Until_Log_Pos: 0
		   Master_SSL_Allowed: No
		   Master_SSL_CA_File: 
		   Master_SSL_CA_Path: 
		      Master_SSL_Cert: 
		    Master_SSL_Cipher: 
		       Master_SSL_Key: 
		Seconds_Behind_Master: NULL
	Master_SSL_Verify_Server_Cert: No
		        Last_IO_Errno: 0
		        Last_IO_Error: 
		       Last_SQL_Errno: 0
		       Last_SQL_Error: 
	  Replicate_Ignore_Server_Ids: 
		     Master_Server_Id: 0
		          Master_UUID: 
		     Master_Info_File: /var/lib/mysql/master.info
		            SQL_Delay: 0
		  SQL_Remaining_Delay: NULL
	      Slave_SQL_Running_State: 
		   Master_Retry_Count: 86400
		          Master_Bind: 
	      Last_IO_Error_Timestamp: 
	     Last_SQL_Error_Timestamp: 
		       Master_SSL_Crl: 
		   Master_SSL_Crlpath: 
		   Retrieved_Gtid_Set: 
		    Executed_Gtid_Set: 
		        Auto_Position: 0
		 Replicate_Rewrite_DB: 
		         Channel_Name: 
		   Master_TLS_Version: 
	1 row in set (0.00 sec)


9、测试：进入主库创建表空间
	mysql> create database slavetest;
	Query OK, 1 row affected (0.00 sec)


 

10、进入从库查询mysql-slave 同步主库表空间
	mysql> show databases;
	+--------------------+
	| Database           |
	+--------------------+
	| information_schema |
	| mysql              |
	| performance_schema |
	| slavetest          |
	| sys                |
	+--------------------+
	5 rows in set (0.00 sec)




