
第一：保证docker、docker-compose、java已经安装

第二：使用docker命令下载kafka、zookeeper

docker pull wurstmeister/kafka

docker pull wurstmeister/zookeeper

第三：编写docker-compose.yml文件，其内容为


version: '2'

services:
  zoo1:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    hostname: zoo1
    ports:
      - "192.168.99.220:2181:2181"
    container_name: zookeeper

  # kafka version: 1.1.0
  # scala version: 2.12
  kafka1:
    image: wurstmeister/kafka
    ports:
      - "192.168.99.220:9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.220
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "stream-in:1:1,stream-out:1:1"
    depends_on:
      - zoo1
    container_name: kafka


第四：运行docker-compose.yml

docker-compose up -d

第五：测试

（1）：进入kafka容器
	docker exec -it kafka /bin/bash
（2）：创建一个topic（其中假设zookeeper容器名为 zookeeper，topic名为test），输入：
	$KAFKA_HOME/bin/kafka-topics.sh --create --topic test \
	--zookeeper zookeeper:2181 --replication-factor 1 \
	--partitions 1

（3）：查看新创建的topic:
	$KAFKA_HOME/bin/kafka-topics.sh --zookeeper zookeeper:2181 \
	--describe --topic test
	
（4）：发布消息: （输入若干条消息后 按 ctrl+C 退出发布）
	$KAFKA_HOME/bin/kafka-console-producer.sh --topic=test \
	--broker-list kafka:9092

（5）：接收消息:
	$KAFKA_HOME/bin/kafka-console-consumer.sh \
	--bootstrap-server kafka:9092 \
	--from-beginning --topic test



第六：详细操作

xincan@xincan:~$ docker ps -a

CONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS       PORTS                                                       NAMES
672dfb1d76b4        wurstmeister/kafka       "start-kafka.sh"         30 seconds ago      Up 27 seconds       192.168.99.220:9092->9092/tcp                               kafka

72dfb4c54696        wurstmeister/zookeeper   "/bin/sh -c '/usr/sb…"   33 seconds ago      Up 29 seconds       22/tcp, 2888/tcp, 3888/tcp, 192.168.99.220:2181->2181/tcp   zookeeper

xincan@xincan:~$ docker exec -it kafka /bin/bash

bash-4.4# $KAFKA_HOME/bin/kafka-topics.sh --create --topic test \
> --zookeeper zookeeper:2181 --replication-factor 1 \
> --partitions 1

Created topic "test".

bash-4.4# $KAFKA_HOME/bin/kafka-topics.sh --zookeeper zookeeper:2181 \
> --describe --topic test

Topic:test	PartitionCount:1	ReplicationFactor:1	Configs:
	Topic: test	Partition: 0	Leader: 1	Replicas: 1	Isr: 1

bash-4.4# $KAFKA_HOME/bin/kafka-console-producer.sh --topic=test \
> --broker-list kafka:9092
>测试
>kafka
>zookeeper
>好不好使
>^Cbash-4.4# 

bash-4.4# $KAFKA_HOME/bin/kafka-console-consumer.sh \
> --bootstrap-server kafka:9092 \
> --from-beginning --topic test
测试
kafka
zookeeper
好不好使



